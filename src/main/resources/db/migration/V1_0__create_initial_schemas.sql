CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT       NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email    VARCHAR(255) NOT NULL UNIQUE,
    created  TIMESTAMP    NOT NULL DEFAULT NOW(),
    updated  TIMESTAMP    NOT NULL DEFAULT NOW(),
    status   VARCHAR(25)  NOT NULL DEFAULT 'NOT_ACTIVE'
);

CREATE TABLE IF NOT EXISTS roles
(
    id      BIGINT       NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name    VARCHAR(100) NOT NULL UNIQUE,
    created TIMESTAMP    NOT NULL DEFAULT NOW(),
    updated TIMESTAMP    NOT NULL DEFAULT NOW(),
    status  VARCHAR(25)  NOT NULL DEFAULT 'NOT_ACTIVE'
);

CREATE TABLE IF NOT EXISTS user_roles
(
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    UNIQUE (user_id, role_id)
);

CREATE TABLE IF NOT EXISTS files
(
    id       BIGINT       NOT NULL AUTO_INCREMENT PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL UNIQUE,
    file_url VARCHAR(255) NOT NULL UNIQUE,
    created  TIMESTAMP    NOT NULL DEFAULT NOW(),
    updated  TIMESTAMP    NOT NULL DEFAULT NOW(),
    status   VARCHAR(25)  NOT NULL DEFAULT 'NOT_ACTIVE'
);

CREATE TABLE IF NOT EXISTS events
(
    id      BIGINT      NOT NULL AUTO_INCREMENT PRIMARY KEY,
    created TIMESTAMP   NOT NULL DEFAULT NOW(),
    updated TIMESTAMP   NOT NULL DEFAULT NOW(),
    status  VARCHAR(25) NOT NULL DEFAULT 'NOT_ACTIVE',
    file_id BIGINT      NOT NULL,
    user_id BIGINT      NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (file_id) REFERENCES files (id)
);
