plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.flywaydb.flyway" version "7.11.1"
    id 'java'
}

group = 'com.maltsevve'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.5.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.5.0'
    implementation 'org.mockito:mockito-core:3.11.2'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    //bhawna
    implementation 'io.springfox:springfox-swagger2:2.7.0'
    implementation 'io.springfox:springfox-swagger-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-parent:2.4.5'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
    implementation 'org.springframework.security:spring-security-web:5.5.0'

    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat:2.5.3'
    implementation 'mysql:mysql-connector-java:8.0.26'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.44'
    //flyway
    implementation 'org.flywaydb:flyway-core:7.11.1'
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://localhost:3306/mysqldemo?allowPublicKeyRetrieval=true&useSSL=false'
    user = 'root'
    password = 'Abc123@12'
    locations = ['classpath:db/migration']
}

flywayMigrate.dependsOn classes

bootRun {
   jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8081"]
}

sourceSets {
    integration {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        java.srcDirs('./src/integrationTest/java')
        resources.srcDirs('./src/integrationTest/resources')
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    outputs.upToDateWhen { false }
    // This is not needed, but I like to see which tests have run
    testLogging { events "passed", "skipped", "failed" }
    // mustRunAfter test
}